{"version":3,"file":"ng-zorro-antd-switch.js","sources":["../../components/switch/switch.component.ts","../../components/switch/switch.module.ts","../../components/switch/public-api.ts","../../components/switch/ng-zorro-antd-switch.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSizeDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'switch';\n\n@Component({\n  selector: 'nz-switch',\n  exportAs: 'nzSwitch',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSwitchComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <button\n      nz-wave\n      type=\"button\"\n      class=\"ant-switch\"\n      #switchElement\n      [disabled]=\"nzDisabled\"\n      [class.ant-switch-checked]=\"isChecked\"\n      [class.ant-switch-loading]=\"nzLoading\"\n      [class.ant-switch-disabled]=\"nzDisabled\"\n      [class.ant-switch-small]=\"nzSize === 'small'\"\n      [class.ant-switch-rtl]=\"dir === 'rtl'\"\n      [nzWaveExtraNode]=\"true\"\n    >\n      <span class=\"ant-switch-handle\">\n        <i *ngIf=\"nzLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></i>\n      </span>\n      <span class=\"ant-switch-inner\">\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCheckedChildren\">{{ nzCheckedChildren }}</ng-container>\n        </ng-container>\n        <ng-template #uncheckTemplate>\n          <ng-container *nzStringTemplateOutlet=\"nzUnCheckedChildren\">{{ nzUnCheckedChildren }}</ng-container>\n        </ng-template>\n      </span>\n      <div class=\"ant-click-animating-node\"></div>\n    </button>\n  `\n})\nexport class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzControl: BooleanInput;\n\n  isChecked = false;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('switchElement', { static: true }) switchElement!: ElementRef<HTMLElement>;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzControl = false;\n  @Input() nzCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() nzUnCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() @WithConfig() nzSize: NzSizeDSType = 'default';\n\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  updateValue(value: boolean): void {\n    if (this.isChecked !== value) {\n      this.isChecked = value;\n      this.onChange(this.isChecked);\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.switchElement.nativeElement.blur();\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private host: ElementRef<HTMLElement>,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality\n  ) {}\n\n  ngOnInit(): void {\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.host.nativeElement, 'click')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          event.preventDefault();\n\n          if (this.nzControl || this.nzDisabled || this.nzLoading) {\n            return;\n          }\n\n          this.ngZone.run(() => {\n            this.updateValue(!this.isChecked);\n            this.cdr.markForCheck();\n          });\n        });\n\n      fromEvent<KeyboardEvent>(this.switchElement.nativeElement, 'keydown')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          if (this.nzControl || this.nzDisabled || this.nzLoading) {\n            return;\n          }\n\n          const { keyCode } = event;\n          if (keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== SPACE && keyCode !== ENTER) {\n            return;\n          }\n\n          event.preventDefault();\n\n          this.ngZone.run(() => {\n            if (keyCode === LEFT_ARROW) {\n              this.updateValue(false);\n            } else if (keyCode === RIGHT_ARROW) {\n              this.updateValue(true);\n            } else if (keyCode === SPACE || keyCode === ENTER) {\n              this.updateValue(!this.isChecked);\n            }\n\n            this.cdr.markForCheck();\n          });\n        });\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.switchElement!.nativeElement, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          /** https://github.com/angular/angular/issues/17793 **/\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.switchElement!.nativeElement);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzSwitchComponent } from './switch.component';\n\n@NgModule({\n  exports: [NzSwitchComponent],\n  declarations: [NzSwitchComponent],\n  imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n})\nexport class NzSwitchModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './switch.component';\nexport * from './switch.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}